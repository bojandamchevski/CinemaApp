// <auto-generated />
using System;
using BojanDamchevski.CinemaApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BojanDamchevski.CinemaApp.DataAccess.Migrations
{
    [DbContext(typeof(CinemaAppDbContext))]
    [Migration("20210910004530_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Bitola",
                            Name = "Cinema Bitola"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Skopje",
                            Name = "Cinema Skopje"
                        });
                });

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.CinemaMovie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("MovieId");

                    b.ToTable("CinemaMovie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 2,
                            MovieId = 3
                        });
                });

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = @"Director: George Lucas 
 Cast: Ewan McGRegor, Hayden Christensen, Natalie Portman",
                            Genre = 8,
                            Title = "Star Wars: Episode III - Revenge of the Sith"
                        },
                        new
                        {
                            Id = 2,
                            Description = @"Director: Gore Verbinski 
 Cast: Johnny Depp, Keira Knightley, Orlando Bloom",
                            Genre = 5,
                            Title = "Pirates of the Caribbean: The Curse of the Black Pearl"
                        },
                        new
                        {
                            Id = 3,
                            Description = @"Director: Nick Cassavetes 
 Cast: Ryan Gosling, Rachel McAdams",
                            Genre = 9,
                            Title = "The Notebook"
                        });
                });

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.MovieReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CinemaMovieId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaMovieId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("MovieReservation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaMovieId = 1,
                            ReservationId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CinemaMovieId = 2,
                            ReservationId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CinemaMovieId = 3,
                            ReservationId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2021, 9, 20, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 9, 22, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2021, 9, 24, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Bojan",
                            LastName = "Damchevski"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jovana",
                            LastName = "Miskimovska"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Stefan",
                            LastName = "Trajkov"
                        });
                });

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.CinemaMovie", b =>
                {
                    b.HasOne("BojanDamchevski.CinemaApp.Domain.Models.Cinema", "Cinema")
                        .WithMany("CinemaMovies")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BojanDamchevski.CinemaApp.Domain.Models.Movie", "Movie")
                        .WithMany("CinemaMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BojanDamchevski.CinemaApp.Domain.Models.MovieReservation", b =>
                {
                    b.HasOne("BojanDamchevski.CinemaApp.Domain.Models.CinemaMovie", "CinemaMovie")
                        .WithMany()
                        .HasForeignKey("CinemaMovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BojanDamchevski.CinemaApp.Domain.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BojanDamchevski.CinemaApp.Domain.Models.User", "User")
                        .WithMany("MovieReservation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
